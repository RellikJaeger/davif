name: Build debian package

on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt install -y gcc-8 g++-8 yasm debhelper dh-make python3-venv python3-pip python3-setuptools
        python3 -m venv venv
        source venv/bin/activate
        pip3 install wheel
        pip3 install meson
        pip3 install ninja
    - name: build debian package
      shell: bash
      env:
        REF: ${{ github.ref }}
        COMMIT: ${{ github.sha }}
      run: |
        source venv/bin/activate
        if [ "${REF:0:11}" = "refs/tags/v" ]; then
          sed -i -r "s/^(\w+) \(([0-9\.]+)(-[A-Z]+)?\)/\1 (${REF:11})/" debian/changelog
        else
          sed -i -r "s/^(\w+) \(([0-9\.]+)(-[A-Z]+)?\)/\1 (\2-$(date +%Y%m%d%H%M%S)${COMMIT:0:7})/" debian/changelog
        fi
        bash scripts/build-debian-package.sh
    - name: Get debian package name.
      shell: bash
      run: |
        echo "::set-output name=filename::$(basename $(find . -type f -name \*.deb))"
      id: get_deb_name
    - name: Upload result
      uses: actions/upload-artifact@v1
      with:
        name: davif
        path: ${{ steps.get_deb_name.outputs.filename }}
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-18.04
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: davif
    - name: Get debian package name.
      shell: bash
      run: |
        echo "::set-output name=filename::$(basename $(find ./davif -type f -name \*.deb))"
      id: get_deb_name
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: davif/${{ steps.get_deb_name.outputs.filename }}
        asset_name: ${{ steps.get_deb_name.outputs.filename }}
        asset_content_type: application/vnd.debian.binary-package
